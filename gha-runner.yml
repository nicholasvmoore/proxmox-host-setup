---

- name: Create VM from template
  hosts: localhost
  connection: local
  gather_facts: false
  tags:
    - vm_creation

  vars_files:
    - vars/proxmox_vars.yml

  vars:
    vm_config:
      template_name: ubuntu-noble
      vmid: 200
      name: gha-runner0
      cores: 4
      memory: 16384  # 16GB in MB
      disk_size: 20G
      proxmox_host: prox0.pcola.moorenix.com
      node: prox0
      storage: local-btrfs
      ciuser: nicholas
      sshkeys: "{{ lookup('env', 'VM_SSH_KEY') | default(root_pub_key, true) }}"

  tasks:
    - name: Clone VM from template
      community.proxmox.proxmox_kvm:
        api_host: "{{ vm_config.proxmox_host }}"
        api_user: "{{ lookup('env', 'PROXMOX_API_USER') | default(api_user, true) | default('root@pam') }}"
        api_token_id: "{{ lookup('env', 'PROXMOX_API_TOKEN_ID') | default(api_token_id, true) | default('automation') }}"
        api_token_secret: "{{ lookup('env', 'PROX0_API_TOKEN_SECRET') | default(prox0_api_token_secret, true) }}"
        node: "{{ vm_config.node }}"
        clone: "{{ vm_config.template_name }}"
        newid: "{{ vm_config.vmid }}"
        name: "{{ vm_config.name }}"
        full: true
        state: present

    - name: Configure VM resources
      community.proxmox.proxmox_kvm:
        api_host: "{{ vm_config.proxmox_host }}"
        api_user: "{{ lookup('env', 'PROXMOX_API_USER') | default(api_user, true) | default('root@pam') }}"
        api_token_id: "{{ lookup('env', 'PROXMOX_API_TOKEN_ID') | default(api_token_id, true) | default('automation') }}"
        api_token_secret: "{{ lookup('env', 'PROX0_API_TOKEN_SECRET') | default(prox0_api_token_secret, true) }}"
        node: "{{ vm_config.node }}"
        vmid: "{{ vm_config.vmid }}"
        cores: "{{ vm_config.cores }}"
        memory: "{{ vm_config.memory }}"
        agent: "enabled=1"
        citype: nocloud
        ciuser: "{{ vm_config.ciuser }}"
        cipassword: "{{ lookup('env', 'PROXMOX_ROOT_PASSWORD') | default(root_password, true) }}"
        ciupgrade: true
        sshkeys: "{{ vm_config.sshkeys }}"
        ipconfig:
          ipconfig0: "ip=dhcp"
        onboot: true
        update: true
        autostart: true

    - name: Configure disk with SSD and trim support
      community.proxmox.proxmox_disk:
        api_host: "{{ vm_config.proxmox_host }}"
        api_user: "{{ lookup('env', 'PROXMOX_API_USER') | default(api_user, true) | default('root@pam') }}"
        api_token_id: "{{ lookup('env', 'PROXMOX_API_TOKEN_ID') | default(api_token_id, true) | default('automation') }}"
        api_token_secret: "{{ lookup('env', 'PROX0_API_TOKEN_SECRET') | default(prox0_api_token_secret, true) }}"
        vmid: "{{ vm_config.vmid }}"
        disk: scsi0
        ssd: true
        discard: on
        state: present

    - name: Resize VM disk
      community.proxmox.proxmox_disk:
        api_host: "{{ vm_config.proxmox_host }}"
        api_user: "{{ lookup('env', 'PROXMOX_API_USER') | default(api_user, true) | default('root@pam') }}"
        api_token_id: "{{ lookup('env', 'PROXMOX_API_TOKEN_ID') | default(api_token_id, true) | default('automation') }}"
        api_token_secret: "{{ lookup('env', 'PROX0_API_TOKEN_SECRET') | default(prox0_api_token_secret, true) }}"
        vmid: "{{ vm_config.vmid }}"
        disk: scsi0
        size: "{{ vm_config.disk_size }}"
        state: resized

    - name: Display VM configuration
      ansible.builtin.debug:
        msg: "VM {{ vm_config.name }} (ID: {{ vm_config.vmid }}) created with {{ vm_config.cores }} cores, {{ vm_config.memory }}MB RAM, {{ vm_config.disk_size }} disk, and cloud-init user {{ vm_config.ciuser }}"

    - name: Start VM
      community.proxmox.proxmox_kvm:
        api_host: "{{ vm_config.proxmox_host }}"
        api_user: "{{ lookup('env', 'PROXMOX_API_USER') | default(api_user, true) | default('root@pam') }}"
        api_token_id: "{{ lookup('env', 'PROXMOX_API_TOKEN_ID') | default(api_token_id, true) | default('automation') }}"
        api_token_secret: "{{ lookup('env', 'PROX0_API_TOKEN_SECRET') | default(prox0_api_token_secret, true) }}"
        node: "{{ vm_config.node }}"
        vmid: "{{ vm_config.vmid }}"
        state: started

- name: Wait for cloud-init
  hosts: prox0.pcola.moorenix.com
  gather_facts: false

  vars:
    vmid: 200

  tasks:
    - name: Wait for cloud-init to complete first boot
      ansible.builtin.shell: |
        /usr/sbin/qm guest exec {{ vmid }} -- /bin/bash -c 'ls /var/lib/cloud/instance/boot-finished 2>/dev/null | wc -l | tr -d \n' | jq -r '."out-data"' | tr -d '\n '
      become: true
      register: boot_check
      until: boot_check.stdout == "1"
      retries: 60
      delay: 10
      changed_when: false

- name: Restart VM to complete bootstrapping
  hosts: localhost
  connection: local
  gather_facts: false
  vars_files:
    - vars/proxmox_vars.yml

  vars:
    vmid: 200
    proxmox_host: prox0.pcola.moorenix.com
    node: prox0

  tasks:
    - name: Restart VM
      community.proxmox.proxmox_kvm:
        api_host: "{{ proxmox_host }}"
        api_user: "{{ lookup('env', 'PROXMOX_API_USER') | default(api_user, true) | default('root@pam') }}"
        api_token_id: "{{ lookup('env', 'PROXMOX_API_TOKEN_ID') | default(api_token_id, true) | default('automation') }}"
        api_token_secret: "{{ lookup('env', 'PROX0_API_TOKEN_SECRET') | default(prox0_api_token_secret, true) }}"
        node: "{{ node }}"
        vmid: "{{ vmid }}"
        state: restarted

- name: Wait for GitHub Actions Runner server to be online
  hosts: gha-runner0
  gather_facts: false

  tasks:
    - name: Wait for server to be online
      ansible.builtin.wait_for_connection:

- name: Install k3s on GitHub Actions Runner
  hosts: gha-runner0
  become: true
  tags:
    - gha_runner_software

  tasks:
    - name: Install Dependencies
      ansible.builtin.apt:
        name:
          - wireguard
          - net-tools
        state: present
        update_cache: true
