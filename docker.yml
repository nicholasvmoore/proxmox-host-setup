---

- name: Create Docker LXC Container
  hosts: proxmox_hosts
  vars_files:
    - vars/proxmox_vars.yml

  vars:
    lxc_vmid: 201

  handlers:
    - import_tasks: handlers/main.yml

  tags:
    - docker_container
    - docker_container_creation

  tasks:
    - name: Create Docker LXC Container
      community.general.proxmox:
        api_host: brix.pcola.moorenix.com
        api_user: "{{ api_user }}"
        api_token_id: "{{ api_token_id }}"
        api_token_secret: "{{ api_token_secret }}"
        vmid: 201
        node: brix
        hostname: docker
        ostemplate: 'local:vztmpl/debian-13-standard_13.1-1_amd64.tar.zst'
        ostype: ubuntu
        disk_volume:
          storage: ssd1
          size: 100
        cores: 8
        memory: 16384
        swap: 0
        netif:
          net0: "name=eth0,ip=dhcp,bridge=vmbr0"
        onboot: true
        password: "{{ root_password }}"
        pubkey: "{{ root_pub_key }}"
        unprivileged: false
      tags:
        - docker_container_creation

    - name: Start Docker LXC Container after creation
      ansible.builtin.debug:
        msg: "Container created, starting via handler"
      notify:
        - Start LXC Container
      tags:
        - docker_container_creation

    - name: Wait for Docker container to be online after creation
      ansible.builtin.wait_for_connection:
        connect_timeout: 60
        sleep: 5
        delay: 10
        timeout: 300
      delegate_to: docker.pcola.moorenix.com
      tags:
        - docker_container_creation

    - name: Stop Docker LXC Container before configuration update
      ansible.builtin.debug:
        msg: "Container configuration update, stopping via handler"
      when: ansible_check_mode == false
      notify:
        - Stop LXC Container
      tags:
        - docker_container_configuration

    - name: Configure Docker LXC container mount points
      ansible.builtin.shell: |
        # Add models directory mount point
        pct set 201 -mp0 /lun0/models,mp=/lun0/models
      tags:
        - docker_container_configuration

    - name: Configure Docker LXC container for Intel GPU device access
      ansible.builtin.shell: |
        # Allow Intel GPU device access in cgroups
        pct set 201 -features nesting=1
      tags:
        - docker_container_configuration

    - name: Add Intel GPU low-level LXC configuration
      ansible.builtin.lineinfile:
        path: /etc/pve/lxc/201.conf
        line: "{{ item }}"
        state: present
      loop:
        - "lxc.apparmor.profile: unconfined"
        - "lxc.cgroup2.devices.allow: a"
        - "lxc.cap.drop: "
        - "lxc.cgroup2.devices.allow: c 226:0 rwm"
        - "lxc.cgroup2.devices.allow: c 226:128 rwm"
        - "lxc.mount.entry: /dev/dri/card0 dev/dri/card0 none bind,optional,create=file"
        - "lxc.mount.entry: /dev/dri/renderD128 dev/dri/renderD128 none bind,optional,create=file"
      tags:
        - docker_container_configuration

    - name: Start Docker LXC Container after configuration
      ansible.builtin.debug:
        msg: "Container configuration complete, starting via handler"
      notify:
        - Start LXC Container
      tags:
        - docker_container_configuration

- name: Wait for Docker server to be online
  hosts: docker
  gather_facts: false
  tags:
    - docker_container
    - docker_container_configuration
  tasks:
    - name: Wait for server to be online
      ansible.builtin.wait_for_connection:

- name: Install and Configure Docker
  hosts: docker
  vars_files:
    - vars/proxmox_vars.yml
  tags:
    - docker_container
    - docker_container_configuration

  handlers:
    - import_tasks: handlers/main.yml

  tasks:
    - name: Install server tooling
      ansible.builtin.include_tasks: tasks/server_tooling.yml
      tags:
        - docker_server_tooling

    - name: Enable Debian non-free repository
      ansible.builtin.copy:
        dest: /etc/apt/sources.list.d/debian-nonfree.list
        content: 'deb http://deb.debian.org/debian {{ ansible_facts["distribution_release"] }} main contrib non-free non-free-firmware'
        mode: '0644'
        owner: root
        group: root
      when: ansible_facts['os_family'] == 'Debian'
      tags:
        - docker_software

    - name: Update apt cache after enabling non-free
      ansible.builtin.apt:
        update_cache: yes
      when: ansible_facts['os_family'] == 'Debian'
      tags:
        - docker_software

    - name: Install Docker
      block:
        - name: Add Docker GPG key
          ansible.builtin.get_url:
            url: https://download.docker.com/linux/debian/gpg
            dest: /etc/apt/trusted.gpg.d/docker.asc
            mode: 0644
            owner: root
            group: root

        - name: Add Docker Repository
          ansible.builtin.apt_repository:
            repo: "deb [arch=amd64 signed-by=/etc/apt/trusted.gpg.d/docker.asc] https://download.docker.com/linux/debian {{ ansible_facts['distribution_release'] }} stable"
            state: present

        - name: Install Docker packages
          ansible.builtin.apt:
            name:
              - docker-ce
              - docker-ce-cli
              - containerd.io
              - docker-buildx-plugin
              - docker-compose-plugin
              - intel-media-va-driver-non-free
              - intel-gpu-tools
            state: present
            update_cache: true

        - name: Enable Docker service
          ansible.builtin.systemd:
            name: docker
            state: started
            enabled: true

      when: ansible_facts['os_family'] == 'Debian'
      tags:
        - docker_software

    - name: Configure Docker settings for Intel GPU
      block:
        - name: Create Docker config directory
          ansible.builtin.file:
            path: /etc/docker
            state: directory
            mode: 0755
            owner: root
            group: root

        - name: Set Docker daemon configuration for Intel GPU
          ansible.builtin.copy:
            dest: /etc/docker/daemon.json
            content: |
              {
                "exec-opts": ["native.cgroupdriver=systemd"],
                "features": {
                  "buildkit": true
                },
                "storage-driver": "overlay2",
                "log-driver": "json-file",
                "log-opts": {
                  "max-size": "100m"
                }
              }
            mode: 0644
            owner: root
            group: root
          notify:
            - restart docker service

        - name: Add Intel GPU device permissions to system
          ansible.builtin.file:
            path: "{{ item }}"
            mode: '0666'
            state: file
          with_items:
            - "/dev/dri/renderD128"
            - "/dev/dri/card0"
          notify:
            - restart docker service

        - name: Ensure video group exists
          ansible.builtin.group:
            name: video
            state: present

        - name: Add Docker user to video group
          ansible.builtin.user:
            name: root
            groups: video
            append: yes

      when: ansible_facts['os_family'] == 'Debian'
      tags:
        - docker_gpu_config

    - name: Setup Intel GPU support packages
      ansible.builtin.apt:
        name:
          - vainfo
          - intel-gpu-tools
          - mesa-va-drivers
        state: present
        update_cache: true
      when: ansible_facts['os_family'] == 'Debian'
      tags:
        - docker_gpu_config

    - name: Install Python Docker dependencies
      ansible.builtin.apt:
        name:
          - python3-pip
          - python3-setuptools
          - python3-wheel
          - python3-docker
          - python3-requests
        state: present
        update_cache: true
      when: ansible_facts['os_family'] == 'Debian'
      tags:
        - docker_images
        - docker_container_configuration

    - name: Pull Docker images
      block:
        - name: Pull Intel Analytics IPEX-LLM inference image
          community.docker.docker_image:
            name: intelanalytics/ipex-llm-inference-cpp-xpu:latest
            source: pull
            state: present
      tags:
        - docker_images
        - docker_container_configuration
